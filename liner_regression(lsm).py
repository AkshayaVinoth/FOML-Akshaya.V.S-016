# -*- coding: utf-8 -*-
"""Liner regression(LSM)

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/11CnV8e0wL5oRXTxvEh_oABR0kTSvOLe9
"""

from google.colab import drive
drive.mount('/content/drive')

import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
from sklearn.linear_model import LinearRegression
from sklearn.metrics import mean_squared_error

file_path='/content/drive/MyDrive/MACHINE LEARNING/headbrain.csv'

df = pd.read_csv(file_path)
print(df.head())

X = df["Head Size(cm^3)"].values
Y = df["Brain Weight(grams)"].values

X = np.array(X)
Y = np.array(Y)
mean_x = np.mean(X)
mean_y = np.mean(Y)
n = len(X)

numer = 0
denom = 0
for i in range(n):
    numer += (X[i] - mean_x) * (Y[i] - mean_y)
    denom += (X[i] - mean_x) ** 2
w1 = numer / denom
w0 = mean_y - (w1 * mean_x)
print(f"Calculated coefficients:\n w0 (Intercept) = {w0:.2f}, w1 (Slope) = {w1:.2f}")

Y_pred = w0 + w1 * X

plt.scatter(X, Y, color="blue", label="Original Data")
plt.plot(X, Y_pred, color="red", label="Regression Line")
plt.xlabel("Head Size (cm^3)")
plt.ylabel("Brain Weight (grams)")
plt.legend()
plt.title("Linear Regression using Least Squares")
plt.show()

mse = np.mean((Y - Y_pred) ** 2)
print(f"MSE: {mse:.2f}")

X_reshaped = X.reshape(-1, 1)
reg = LinearRegression()
reg.fit(X_reshaped, Y)
print(f"Scikit-learn coefficients:\n w0 (Intercept) = {reg.intercept_:.2f}, w1 (Slope) = {reg.coef_[0]:.2f}")

Y_pred_sklearn = reg.predict(X_reshaped)
plt.scatter(X, Y, color="green", label="Original Data")
plt.plot(X, Y_pred_sklearn, color="orange", label="Sklearn Regression Line")
plt.xlabel("Head Size (cm^3)")
plt.ylabel("Brain Weight (grams)")
plt.legend()
plt.title("Linear Regression using Scikit-learn")
plt.show()